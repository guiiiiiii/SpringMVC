<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.neobns.service" />
	
	<beans:bean id="customAccessDenied" class="com.neobns.common.AccessDeniedHandlerImpl"></beans:bean>
	<beans:bean id='customLoginSuccess' class="com.neobns.common.LoginSuccessHandlerImpl"></beans:bean>
	<!-- 검사 URL -->
	<http use-expressions="true">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/user/register" access="permitAll" />
		<intercept-url pattern="/user/login" access="permitAll" />
		<intercept-url pattern="/article/list" access="permitAll" />
		<intercept-url pattern="/article/detail" access="permitAll" />
		<intercept-url pattern="/article/download" access="permitAll" />
			
		<intercept-url pattern="/user/**" access="hasAnyRole('USER, ADMIN')" />		
		<intercept-url pattern="/article/**" access="hasAnyRole('USER, ADMIN')" />
	
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		
		<intercept-url pattern="/**" access="permitAll" />

		<form-login login-page="/user/login" default-target-url="/"
			authentication-success-handler-ref="customLoginSuccess"
			authentication-failure-url="/user/login?error"
			username-parameter="user_id" password-parameter="user_pw" />
		<logout logout-url="/logout" logout-success-url="/" />

		<!-- <access-denied-handler
			error-page="/user/accessDenied" /> -->
		
		<!--  --><access-denied-handler ref="customAccessDenied"/>
	</http>

	<beans:bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />


	<!-- provider -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<jdbc-user-service data-source-ref="dataSource"
				role-prefix=""
				users-by-username-query="SELECT USER_ID, USER_PW, USER_USE_STATE FROM TB_USER WHERE USER_ID = ?"
				authorities-by-username-query="SELECT USER_ID, USER_AUTHORITY FROM TB_USER WHERE USER_ID = ?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>